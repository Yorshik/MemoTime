# Generated by Django 4.2.16 on 2024-12-11 15:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Event name", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "custom_name",
                    models.CharField(
                        blank=True,
                        help_text="Custom event name",
                        max_length=255,
                        verbose_name="custom name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Event description",
                        verbose_name="description",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("subject", "Subject"),
                            ("club", "Club"),
                            ("event", "Event"),
                        ],
                        help_text="Event type",
                        max_length=20,
                        verbose_name="type",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                        ],
                        help_text=(
                            "If high, the event is displayed over the subject. If"
                            " medium priority, conflicts may arise. If low, the subject"
                            " overlaps the event."
                        ),
                        max_length=20,
                        verbose_name="priority",
                    ),
                ),
            ],
            options={
                "verbose_name": "event",
                "verbose_name_plural": "events",
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_static",
                    models.BooleanField(
                        help_text=(
                            "Determines if the schedule alternates (if False, the"
                            " 'even' field in TimeSchedule is used)"
                        ),
                        verbose_name="static",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="Schedule start date", verbose_name="start date"
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        help_text="Schedule expiration date",
                        verbose_name="expiration date",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "schedule",
                "verbose_name_plural": "schedules",
            },
        ),
        migrations.CreateModel(
            name="TimeSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_start",
                    models.TimeField(
                        help_text="Start time of the subject/event",
                        verbose_name="start time",
                    ),
                ),
                (
                    "time_end",
                    models.TimeField(
                        help_text="End time of the subject/event",
                        verbose_name="end time",
                    ),
                ),
                (
                    "even",
                    models.BooleanField(
                        help_text="Even/odd week for the subject",
                        verbose_name="even week",
                    ),
                ),
                (
                    "day_number",
                    models.IntegerField(
                        choices=[
                            (1, "Monday"),
                            (2, "Tuesday"),
                            (3, "Wednesday"),
                            (4, "Thursday"),
                            (5, "Friday"),
                            (6, "Saturday"),
                            (7, "Sunday"),
                        ],
                        help_text="Day of the week (1-7)",
                        verbose_name="day of the week",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        help_text="Event",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timeschedules",
                        to="schedule.event",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        help_text="Schedule",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timeschedules",
                        to="schedule.schedule",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timeschedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "time schedule",
                "verbose_name_plural": "time schedules",
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Teacher's name", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teachers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "teacher",
                "verbose_name_plural": "teachers",
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "disposable",
                    models.BooleanField(
                        default=True,
                        help_text="Determines if the note is used only once",
                        verbose_name="disposable",
                    ),
                ),
                (
                    "global_note",
                    models.BooleanField(help_text="Global note", verbose_name="global"),
                ),
                (
                    "heading",
                    models.CharField(
                        help_text="Note heading", max_length=255, verbose_name="heading"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Note description",
                        verbose_name="description",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "note",
                "verbose_name_plural": "notes",
            },
        ),
        migrations.AddField(
            model_name="event",
            name="notes",
            field=models.ForeignKey(
                blank=True,
                help_text="Notes related to the event",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="events",
                to="schedule.note",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="teacher",
            field=models.ForeignKey(
                blank=True,
                help_text="Teacher",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="events",
                to="schedule.teacher",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="user",
            field=models.ForeignKey(
                help_text="User",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
